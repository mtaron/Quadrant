<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:graph="using:Quadrant.Graph"
    xmlns:f="using:Quadrant.Functions"
    xmlns:qc="using:Quadrant.Controls"
    xmlns:qconv="using:Quadrant.Converters"
    x:Class="Quadrant.GraphView"
    Loaded="OnLoaded">
    <UserControl.Resources>
        <qconv:ScaleConverter x:Key="ScaleConverter" />

        <Style x:Key="ScaleSliderStyle" TargetType="Slider" >
            <Setter Property="Maximum" Value="80" />
            <Setter Property="Minimum" Value="-80" />
            <Setter Property="SmallChange" Value="1" />
            <Setter Property="LargeChange" Value="10" />
            <Setter Property="IsThumbToolTipEnabled" Value="False" />
        </Style>

        <Style x:Key="FunctionViewItemStyle" TargetType="ListViewItem" >
            <Setter Property="IsHoldingEnabled" Value="False"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="AllowDrop" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Grid x:Name="ContentBorder"
                            Control.IsTemplateFocusTarget="True"
                            FocusVisualMargin="{TemplateBinding FocusVisualMargin}"
                            FocusVisualPrimaryBrush="{TemplateBinding FocusVisualPrimaryBrush}"
                            FocusVisualPrimaryThickness="{TemplateBinding FocusVisualPrimaryThickness}"
                            FocusVisualSecondaryBrush="{TemplateBinding FocusVisualSecondaryBrush}"
                            FocusVisualSecondaryThickness="{TemplateBinding FocusVisualSecondaryThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="DisabledStates">
                                    <VisualState x:Name="Enabled" />
                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="ContentBorder.Opacity"
                                                    Value="{ThemeResource ListViewItemDisabledThemeOpacity}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <ContentPresenter x:Name="ContentPresenter"
                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Content="{TemplateBinding Content}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Margin="{TemplateBinding Padding}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="OverflowPresenterStyle" TargetType="CommandBarOverflowPresenter" >
            <Setter Property="Background" Value="{ThemeResource SystemControlAltHighAcrylicElementBrush}"/>
        </Style>
    </UserControl.Resources>

    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="FunctionEditMode">
                <VisualState x:Name="Normal">
                    <VisualState.Setters>
                        <Setter Target="Graph.(graph:FunctionGraph.InkInputOnly)" Value="False" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="EditFunction">
                    <VisualState.Setters>
                        <Setter Target="FunctionBar.(UIElement.Visibility)" Value="Collapsed"/>
                        <Setter Target="EditBar.(UIElement.Visibility)" Value="Visible" />
                        <Setter Target="Graph.(graph:FunctionGraph.InkInputOnly)" Value="True" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup x:Name="InkToolsMode">
                <VisualState x:Name="InkToolsHidden"/>

                <VisualState x:Name="InkToolsShown">
                    <VisualState.Setters>
                        <Setter Target="InkTools.(UIElement.Visibility)" Value="Visible"/>
                        <Setter Target="Graph.(graph:FunctionGraph.InkInputOnly)" Value="True" />
                    </VisualState.Setters>
                    <VisualState.Storyboard>
                        <Storyboard>
                            <PopInThemeAnimation
                                TargetName="InkTools"
                                FromHorizontalOffset="0"
                                FromVerticalOffset="40"/>
                        </Storyboard>
                    </VisualState.Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <FlyoutBase.AttachedFlyout>
            <Flyout
                x:Name="ColorFlyout"
                x:Load="False"
                Placement="Top"
                LightDismissOverlayMode="Off"
                AllowFocusOnInteraction="True">
                <Flyout.FlyoutPresenterStyle>
                    <Style TargetType="FlyoutPresenter">
                        <Setter Property="Background" Value="{ThemeResource SystemControlBaseHighAcrylicElementMediumBrush}"/>
                        <Setter Property="MinHeight" Value="100"/>
                        <Setter Property="MaxHeight" Value="400"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Disabled"/>
                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
                    </Style>
                </Flyout.FlyoutPresenterStyle>
                <qc:ColorControl
                    x:Name="ColorControl"
                    ColorChanged="ColorControl_ColorChanged"
                    AutomationProperties.AccessibilityView="Raw" />
            </Flyout>
        </FlyoutBase.AttachedFlyout>
        
        <graph:FunctionGraph
            x:Name="Graph"
            x:Uid="Graph"
            Grid.RowSpan="3"
            AutomationProperties.AutomationId="Graph"/>

        <InkToolbar
            x:Name="InkTools"
            x:Load="False"
            Grid.Row="1"
            Background="{StaticResource AppBarToggleButtonBackgroundChecked}"
            HorizontalAlignment="Left"
            Visibility="Collapsed"
            ButtonFlyoutPlacement="Top"
            EraseAllClicked="{x:Bind Graph.EraseAllInk}"
            IsTabStop="False"
            InitialControls="None"
            IsAccessKeyScope="True"
            TargetInkCanvas="{x:Bind Graph.InkLayer}" >
            <InkToolbarBallpointPenButton AccessKey="P"/>
            <InkToolbarEraserButton
                AccessKey="E"
                Checked="{x:Bind Graph.EnableErase}"
                Unchecked="{x:Bind Graph.DisableErase}" />
            <InkToolbarStencilButton x:Name="StencilButton" AccessKey="R"/>
        </InkToolbar>

        <qc:EditCommandBar
            x:Name="EditBar"
            x:Uid="EditBar"
            x:Load="False"
            Grid.Row="2"
            XYFocusLeft="{x:Bind}"
            EditComplete="EditBar_EditComplete"
            ColorEdited="EditBar_ColorEdited"
            XYFocusUpNavigationStrategy="NavigationDirectionDistance"
            FunctionManager="{x:Bind FunctionManager}"
            Visibility="Collapsed" />

        <qc:AdapativeCommandBar
            x:Uid="FunctionBar"
            x:Name="FunctionBar"
            Grid.Row="2"
            DefaultLabelPosition="Collapsed"
            Opening="FunctionBar_OpeningAsync"
            AccessKey="M"
            MinCommandWidth="184"
            MinDefaultLabelRightWidth="600"
            XYFocusUpNavigationStrategy="NavigationDirectionDistance"
            CommandBarOverflowPresenterStyle="{StaticResource OverflowPresenterStyle}"
            Style="{StaticResource FunctionBarStyle}">
            <CommandBar.PrimaryCommands>
                <AppBarButton
                    x:Uid="NewButton"
                    x:Name="NewButton"
                    AccessKey="N"
                    AutomationProperties.AcceleratorKey="CTRL+N"
                    Click="{x:Bind NewFunction}"
                    Icon="Add" />
                <AppBarButton
                    x:Uid="RecenterButton"
                    x:Name="RecenterButton"
                    DynamicOverflowOrder="3"
                    AccessKey="R"
                    Icon="Home"
                    Click="{x:Bind Graph.RecenterWithButton}"
                    IsEnabled="{x:Bind Graph.CanRecenter, Mode=OneWay}" />
                <AppBarButton
                    x:Uid="SettingsButton"
                    x:Name="SettingsButton"
                    DynamicOverflowOrder="2"
                    AccessKey="S"
                    Icon="Setting">
                    <AppBarButton.Flyout>
                        <Flyout
                            AllowFocusOnInteraction="True"
                            Closed="OnScaleFlyoutClosed">
                            <Grid IsAccessKeyScope="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="120" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <FontIcon
                                    Glyph="&#xEC8F;"
                                    Margin="0,0,10,0"
                                    RenderTransformOrigin="0.5,0.5">
                                    <FontIcon.RenderTransform>
                                        <RotateTransform Angle="90" />
                                    </FontIcon.RenderTransform>
                                </FontIcon>
                                <Slider
                                    x:Uid="ScaleXSlider"
                                    x:Name="ScaleXSlider"
                                    AccessKey="X"
                                    Grid.Column="1"
                                    Padding="0,6,0,0"
                                    Style="{StaticResource ScaleSliderStyle}"
                                    ToolTipService.ToolTip="{x:Bind ScaleXSlider.(AutomationProperties.Name)}"
                                    Value="{x:Bind Graph.ScaleX, Mode=TwoWay, Converter={StaticResource ScaleConverter}}" />
                                <FontIcon
                                    Glyph="&#xEC8F;"
                                    Margin="0,0,10,0"
                                    Grid.Row="1"/>
                                <Slider
                                    x:Uid="ScaleYSlider"
                                    x:Name="ScaleYSlider"
                                    Grid.Column="1"
                                    Grid.Row="1"
                                    Padding="0,5,0,0"
                                    AccessKey="Y"
                                    ToolTipService.ToolTip="{x:Bind ScaleYSlider.(AutomationProperties.Name)}"
                                    Style="{StaticResource ScaleSliderStyle}"
                                    Value="{x:Bind Graph.ScaleY, Mode=TwoWay, Converter={StaticResource ScaleConverter}}" />
                                <ToggleSwitch
                                    x:Uid="AngleToggle"
                                    Margin="0,0,10,0"
                                    AccessKey="A"
                                    Grid.Row="2"
                                    Grid.ColumnSpan="2"
                                    IsOn="{x:Bind FunctionManager.UseRadians, Mode=TwoWay}" />
                            </Grid>
                        </Flyout>
                    </AppBarButton.Flyout>
                </AppBarButton>

                <AppBarToggleButton
                    x:Uid="InkButton"
                    x:Name="InkButton"
                    AccessKey="I"
                    Checked="{x:Bind ShowInkTools}"
                    Unchecked="{x:Bind HideInkTools}" >
                    <AppBarToggleButton.Icon>
                        <FontIcon Glyph="&#xEE56;" />
                    </AppBarToggleButton.Icon>
                </AppBarToggleButton>

                <AppBarButton
                    x:Uid="ShareButton"
                    x:Name="ShareButton"
                    AccessKey="H"
                    AutomationProperties.AcceleratorKey="Win+H"
                    DynamicOverflowOrder="1"
                    Click="ShareButton_Click" >
                    <AppBarButton.Icon>
                        <FontIcon Glyph="&#xE72D;" />
                    </AppBarButton.Icon>
                </AppBarButton>
            </CommandBar.PrimaryCommands>

            <CommandBar.SecondaryCommands>
                <AppBarButton
                    x:Uid="PrintButton"
                    x:Name="PrintButton"
                    AccessKey="P"
                    Click="PrintButton_ClickAsync" >
                    <AppBarButton.Icon>
                        <FontIcon Glyph="&#xE749;" />
                    </AppBarButton.Icon>
                </AppBarButton>
                <AppBarButton
                    Label="{x:Bind CurrentTheme, Mode=OneWay}"
                    AccessKey="T"
                    Click="SwitchThemeButton_Click" >
                    <AppBarButton.Icon>
                        <FontIcon Glyph="&#xE2B1;" />
                    </AppBarButton.Icon>
                </AppBarButton>
                <AppBarButton
                    x:Uid="FeedbackButton"
                    AccessKey="F"
                    Click="FeedbackButton_ClickAsync" >
                    <AppBarButton.Icon>
                        <FontIcon Glyph="&#xED15;" />
                    </AppBarButton.Icon>
                </AppBarButton>
                <AppBarButton
                    x:Uid="AboutButton"
                    AccessKey="A"
                    Click="AboutButton_Click">
                    <AppBarButton.Icon>
                        <FontIcon Glyph="&#xE946;" />
                    </AppBarButton.Icon>
                    <FlyoutBase.AttachedFlyout>
                        <Flyout
                            Placement="Full"
                            LightDismissOverlayMode="On"
                            AllowFocusOnInteraction="True">
                            <Flyout.FlyoutPresenterStyle>
                                <Style TargetType="FlyoutPresenter">
                                    <Setter Property="Background" Value="{ThemeResource SystemControlBaseHighAcrylicElementMediumBrush }"/>
                                    <Setter Property="MinHeight" Value="100"/>
                                    <Setter Property="MaxHeight" Value="260"/>
                                    <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
                                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                                </Style>
                            </Flyout.FlyoutPresenterStyle>
                            <qc:AboutControl x:Name="About" x:Load="False" AutomationProperties.AccessibilityView="Raw"/>
                        </Flyout>
                    </FlyoutBase.AttachedFlyout>
                </AppBarButton>
            </CommandBar.SecondaryCommands>

            <CommandBar.Content>
                <ListView
                    x:Uid="FunctionList"
                    x:Name="FunctionList"
                    ScrollViewer.VerticalScrollBarVisibility="Disabled"
                    ScrollViewer.VerticalScrollMode="Disabled"
                    ScrollViewer.IsVerticalRailEnabled="False"
                    ScrollViewer.HorizontalScrollMode="Auto"
                    ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                    ScrollViewer.IsHorizontalRailEnabled="True"
                    IsItemClickEnabled="True"
                    ItemClick="FunctionList_ItemClick"
                    ItemContainerStyle="{StaticResource FunctionViewItemStyle}"
                    SelectionMode="None"
                    IsFocusEngagementEnabled="True"
                    ItemsSource="{x:Bind FunctionManager.Functions, Mode=OneWay}">

                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ItemsStackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>

                    <ListView.ItemContainerTransitions>
                        <TransitionCollection>
                            <AddDeleteThemeTransition/>
                        </TransitionCollection>
                    </ListView.ItemContainerTransitions>

                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="f:FunctionData">
                            <qc:FunctionLabel
                                Function="{x:Bind}"
                                AutomationProperties.Name="{x:Bind Name}"
                                PointerEntered="FunctionLabel_PointerEntered"
                                PointerExited="FunctionLabel_PointerExited"
                                ToolTipService.Placement="Top"
                                ToolTipService.ToolTip="{x:Bind DisplayExpression, Mode=OneWay}">
                                <UIElement.ContextFlyout>
                                    <MenuFlyout Placement="Top">
                                        <MenuFlyoutItem
                                            x:Uid="RecenterFlyoutItem"
                                            Icon="Home"
                                            Click="RecenterFlyoutItem_Click" />
                                        <MenuFlyoutItem
                                            x:Uid="ColorFlyoutItem"
                                            Click="ColorlyoutItem_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE2B1;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>
                                        <MenuFlyoutItem
                                            x:Uid="DeleteFlyoutItem"
                                            Icon="Delete"
                                            Click="DeleteFlyoutItem_ClickAsync" />
                                    </MenuFlyout>
                                </UIElement.ContextFlyout>
                            </qc:FunctionLabel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </CommandBar.Content>
        </qc:AdapativeCommandBar>
    </Grid>
</UserControl>
